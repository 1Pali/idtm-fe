<mvc:View
        controllerName="com.sap.sct.idtm_ui.src.detail.entityTableConfiguration.components.body.sections.information.GeneralInformation"
        xmlns="sap.m"
        xmlns:mvc="sap.ui.core.mvc"
        xmlns:form="sap.ui.layout.form"
        xmlns:core="sap.ui.core"
>
    <form:Form
        id="isGeneralInformation"
    >
        <form:layout>
            <form:ResponsiveGridLayout
                    labelSpanXL="4"
                    labelSpanL="4"
                    labelSpanM="12"
                    labelSpanS="12"
                    adjustLabelSpan="false"
                    emptySpanXL="0"
                    emptySpanL="0"
                    emptySpanM="0"
                    emptySpanS="0"
                    columnsXL="2"
                    columnsL="2"
                    columnsM="2"
                    singleContainerFullSize="false"
            />
        </form:layout>
        <form:formContainers>
            <form:FormContainer>
                <form:formElements>
                    <form:FormElement
                            label="{i18n>isIngredientType}"
                    >
                        <form:fields>
                            <ComboBox
                                id="isIngredientType"
                                selectedKey="{data>idIngredientType}"
                                valueState="{
                                    parts: [
                                        {path: 'data>idIngredientType'},
                                        {value: 'isIngredientType'}
                                    ],
                                    formatter: '.getStateAndValidate'
                                }"
                                selectionChange="onFieldChange"
                                width="100%"
                                required="true"
                                items="{
                                    path: 'data>/ingredientTypes',
                                    sorter: {
                                        path: 'name'
                                    }
                                }"
                            >
                                <core:Item
                                    key="{data>id}"
                                    text="{
                                        path: 'data>name',
                                        formatter: '.formatter.getTranslatedText'
                                    }"
                                />
                            </ComboBox>
                        </form:fields>
                    </form:FormElement>
                    <form:FormElement
                        label="{i18n>isName}"
                    >
                        <form:fields>
                            <Input
                                value="{data>name}"
                                valueState="{
                                    parts: [
                                        {path: 'data>name'},
                                        {value: 'isName'}
                                    ],
                                    formatter: '.getStateAndValidate'
                                }"
                                required="true"
                            />
                        </form:fields>
                    </form:FormElement>
                    <form:FormElement
                        label="{i18n>isEnergy}"
                    >
                        <form:fields>
                            <Input
                                value="{data>energy}"
                                valueState="{
                                    parts: [
                                        {path: 'data>energy'},
                                        {value: 'isEnergy'}
                                    ],
                                    formatter: '.getStateAndValidate'
                                }"
                                type="Number"
                                required="true"
                            />

                        </form:fields>
                    </form:FormElement>
                    <form:FormElement
                        label="{i18n>isProtein}"
                    >
                        <form:fields>
                            <Input
                                value="{data>protein}"
                                valueState="{
                                    parts: [
                                        {path: 'data>protein'},
                                        {value: 'isProtein'}
                                    ],
                                    formatter: '.getStateAndValidate'
                                }"
                                type="Number"
                                required="true"
                            />
                        </form:fields>
                    </form:FormElement>
                    <form:FormElement
                        label="{i18n>isCarbohydrate}"
                    >
                        <form:fields>
                            <Input
                                value="{data>carbohydrate}"
                                valueState="{
                                    parts: [
                                        {path: 'data>carbohydrate'},
                                        {value: 'isCarbohydrate'}
                                    ],
                                    formatter: '.getStateAndValidate'
                                }"
                                type="Number"
                                required="true"
                            />
                        </form:fields>
                    </form:FormElement>
                </form:formElements>
            </form:FormContainer>
            <form:FormContainer>
                <form:formElements>
                    <form:FormElement
                        label="{i18n>isFat}"
                    >
                        <form:fields>
                            <Input
                                value="{data>fat}"
                                valueState="{
                                    parts: [
                                        {path: 'data>fat'},
                                        {value: 'isFat'}
                                    ],
                                    formatter: '.getStateAndValidate'
                                }"
                                type="Number"
                                required="true"
                            />
                        </form:fields>
                    </form:FormElement>
                    <form:FormElement
                        label="{i18n>isFiber}"
                    >
                        <form:fields>
                            <Input
                                value="{data>fiber}"
                                valueState="{
                                    parts: [
                                        {path: 'data>fiber'},
                                        {value: 'isFiber'}
                                    ],
                                    formatter: '.getStateAndValidate'
                                }"
                                type="Number"
                                required="true"
                            />
                        </form:fields>
                    </form:FormElement>
                    <form:FormElement
                        label="{i18n>isPrice}"
                    >
                        <form:fields>
                            <Input
                                value="{data>price}"
                                type="Number"
                                required="false"
                            />
                        </form:fields>
                    </form:FormElement>
                </form:formElements>
            </form:FormContainer>
        </form:formContainers>
    </form:Form>
</mvc:View>